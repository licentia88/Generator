@typeparam TModel where TModel : new()


@implements IGenPage<TModel>
@implements IDisposable

<style>
    .mud-dialog .mud-dialog-actions {
        flex: 0 0 auto;
        display: flex;
        margin-top: 0;
        padding-right: 3.5rem !important;
        align-items: center;
        justify-content: flex-end;
        border-bottom-left-radius: var(--mud-default-borderradius);
        border-bottom-right-radius: var(--mud-default-borderradius);
    }
    .mud-dialog .mud-dialog-content.mud-dialog-no-side-padding {
         padding: 0; 
    }
</style>

@{
    if (SelectedItem is null) return;

    <CascadingValue Value="GenGrid" Name="@(nameof(GenGrid.ParentGrid))">
        <EditForm Model="@SelectedItem" OnValidSubmit="((INonGenPage)this).OnCommit" OnInvalidSubmit="OnInvalidSubmit">
            <MudDialog DefaultFocus="DefaultFocus.Element" OnBackdropClick="(()=> Close(true))" DisableSidePadding="true">
                <DialogContent>

                    <DataAnnotationsValidator />

                    <MudContainer Class="m-0" Style="max-height: 75vh;overflow-y: scroll;max-width:100vw!important">
                        @*<MudContainer Class="m-0 p-2" Style="overflow-y: scroll">*@
                        @{

                            <MudGrid Justify="Justify.FlexStart" Spacing="0">

                                @{
                                    var components = Components.Select(x => x.component);


                                    foreach (var componentDetail in components)
                                    {

                                        componentDetail.ValidateField();

                                        <MudItem Class="mt-4"
                                                 xs="componentDetail.xs"
                                                 sm="componentDetail.sm"
                                                 md="componentDetail.md"
                                                 lg="componentDetail.lg"
                                                 xl="componentDetail.xl"
                                                 xxl="componentDetail.xxl">
                                            @{

                                                if (componentDetail.IsEditorVisible(SelectedItem))
                                                {
                                                    @componentDetail.RenderAsComponent(SelectedItem);
                                                }
                                                else
                                                {
                                                    if (componentDetail.ClearIfNotVisible)
                                                        componentDetail.SetEmpty();
                                                }

                                            }
                                        </MudItem>
                                    }

                                }
                            </MudGrid>
                            @*<div style="overflow-x:hidden; ">

                            </div>*@


                            if (GenGrid.EditMode == EditMode.SmartForm && GenGrid.GenDetailGrid is not null)
                            {
                                @*<div style=" overflow-y: scroll!important; ">*@
                                @*<div style="overflow-x:hidden; overflow-y:hidden;">*@
                                <CascadingValue Value="Parameters" Name="@(nameof(Parameters))">
                                    <CascadingValue Value="SelectedItem" Name="@(nameof(SelectedItem))">
                                        <CascadingValue Value="GenGrid" Name="@(nameof(GenGrid.ParentGrid))">
                                            @GenGrid.GenDetailGrid(SelectedItem)
                                        </CascadingValue>
                                    </CascadingValue>
                                </CascadingValue>

                                @*</div>*@
                                @*</div>*@

                            }
                        }
                    </MudContainer>
                </DialogContent>
                <DialogActions>
                    <MudButton OnClick="()=> Close(true)">@GenGrid.CancelText</MudButton>
                    <MudButton Color="Color.Success" Variant="Variant.Filled" ButtonType="ButtonType.Submit">
                        @(GetSubmitTextFromViewState())
                    </MudButton>
                </DialogActions>
            </MudDialog>
        </EditForm>

    </CascadingValue>



}