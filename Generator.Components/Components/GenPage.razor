@typeparam TModel

@implements IGenPage<TModel>


@{
    if (SelectedItem is null)
        return;
}
<EditForm Model="@SelectedItem" OnValidSubmit="OnCommit">

    <MudDialog DefaultFocus="DefaultFocus.Element" OnBackdropClick="(async()=> Close())">
        <DialogContent>

            @{
//if (EnableModelValidation)
//{
                    <DataAnnotationsValidator  />
                   
                @*}*@
            }
        <MudContainer Style="max-height: 80vh; overflow-y: auto ">
            @{

                        <MudGrid Justify="Justify.FlexStart" Spacing="0">

                            @foreach (var component in GenGrid.Components)
                            {

                                <MudItem Class="mt-4"
                                         xs="component.xs"
                                         sm="component.sm"
                                         md="component.md"
                                         lg="component.lg"
                                         xl="component.xl"
                                         xxl="component.xxl">
                                    @{
                                        if (component.VisibleOnEdit)
                                        {
                                            @component.RenderAsComponent(SelectedItem)
                                        }
                                    }
                                </MudItem>
                            }
                        </MudGrid>

                if (GenGrid.EditMode == EditMode.SmartForm && GenGrid.GenDetailGrid is not null)
                {
                    <div class="pt-5 pb-5">
                        <CascadingValue Value="SelectedItem" Name="@(nameof(SelectedItem))">
                            <CascadingValue Value="GenGrid" Name="@(nameof(GenGrid.ParentComponent))">
                                <CascadingValue  Name="@(nameof(ParentSubmit))"
                                                 Value="@(EventCallback.Factory.Create(this, async ()=> await GenGrid.InvokeCallBackFromChild()))" >
                                    @GenGrid.GenDetailGrid(SelectedItem)
                                </CascadingValue>
                            </CascadingValue>
                        </CascadingValue>
                    </div>
                }
            }
        </MudContainer>
        </DialogContent>
        <DialogActions>
            @*<PageDialogActions @ref="pageDialogActions" TModel="TModel" Page="this" />*@
            <MudButton OnClick="Close">@GenGrid.CancelText</MudButton>
            <MudButton Color="Color.Success" Variant="Variant.Filled" ButtonType="ButtonType.Submit">
                 @(GetSubmitTextFromViewState())
            </MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>
